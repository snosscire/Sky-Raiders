uses 'Engine/Engine.feh';
uses 'Game/Events.feh';
uses 'Game/States.feh';
uses 'Game/Menus.feh';
uses 'Game/Entities.feh';
uses 'Game/Controllers.feh';

class Game {
	static final number GRAVITY = 1.0;
	static boolean running;
	static object this;
	static object currentState;
	static function run() {
		if( not .running ) {
			object player;
			object playerController;
			object background;
			
			number frames = 0;
			number fps = 0;
			object font;
			
			Engine.setScreen(640, 480, false);
			
			font = new Font('font-10.png', 10, 10);
			
			//EventHandler.unregisterAllListeners();
			
			Time.current = Engine.currentTime();
			Time.last = Time.current;
			Time.delta = 0;
			Time.speedMultiplier = 0.0;
			
			Game.setState(new MenuState());
			
			.running = true;
			while( .running and .currentState ) {
				frames++;
				fps = (frames / (Engine.currentTime() / 1000.0)).round();
				Time.current = Engine.currentTime();
				Time.delta = Time.current - Time.last;
				Time.last = Time.current;
				Time.speedMultiplier = Time.delta / 10.0;
				EventHandler.update();
				MessageHandler.update();
				.currentState.update();
				Engine.clearScreen();
				.currentState.draw();
				font.drawText('' + fps, Engine.screenWidth() - font.textWidth('' + fps) - 5, 5);
				Engine.updateScreen();
			}
			
			Engine.unloadImageResources();
		}
	}
	static function quit() {
		.running = false;
	}
	static function setState( object state ) {
		if( .currentState )
			.currentState.quit();
		.currentState = state;
		if( not .this ) {
			.this = new Game();
		}
		EventHandler.unregisterAllListeners();
		EventHandler.registerListener(Engine.EVENT_QUIT, .this);
		.currentState.init();
	}
	function onQuit( object event ) {
		Game.quit();
	}
}

Engine.printLine("Hello World!");
Game.run();

