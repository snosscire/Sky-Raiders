class Camera {
	number left;
	number right;
	number top;
	number bottom;
	function update( object currentMap, object player ) {
		number screenWidth = Engine.screenWidth();
		number screenHeight = Engine.screenHeight();
		
		.left = player.x - (screenWidth / 2);
		.top = player.y - (screenHeight / 2);
		
		if( .left < 0 ) {
			.left = 0;
		} else if( .left > (currentMap.getWidth() - screenWidth) ) {
			.left = currentMap.getWidth() - screenWidth;
		}
		
		if( .top < 0 ) {
			.top = 0;
		} else if( .top > (currentMap.getHeight() - screenHeight) ) {
			.top = currentMap.getHeight() - screenHeight;
		}
		
		.right = .left + screenWidth;
		.bottom = .top + screenHeight;
	}
}

class MapLayer {
	number screenX;
	number screenY;
	number level;
	number speed;
	number imageX;
	number imageY;
	object image;
	function unload() {
		if( .image ) {
			Engine.unloadImageResource(.image);
		}
	}
	function draw( number changeX, number changeY ) {
		.imageX = .imageX + (changeX * .speed);
		.imageY = .imageY + changeY;
		Engine.drawImage(.image, .screenX, .screenY, .imageX, .imageY, Engine.screenWidth(), Engine.screenHeight());
	}
}

class Map {
	array layers;
	number width;
	number height;
	number changeX;
	number changeY;
	number lastCameraLeft;
	number lastCameraTop;
	static function load( string name ) {
		object map = new Map();
		object layer;
		
		layer = new MapLayer();
		layer.screenX = 0;
		layer.screenY = 0;
		layer.level = -5;
		layer.speed = 0.2;
		layer.image = Engine.loadImageResource("enviorment/sky_test2.bmp");
		map.layers[] = layer;

		layer = new MapLayer();
		layer.screenX = 0;
		layer.screenY = Engine.screenHeight() - 58 - 480;
		layer.level = -4;
		layer.speed = 0.4;
		layer.image = Engine.loadImageResource("enviorment/mountains_back.bmp");
		layer.image.setTransparentColor(layer.image.getColor(253, 203, 203));
		map.layers[] = layer;


		layer = new MapLayer();
		layer.screenX = 0;
		layer.screenY = Engine.screenHeight() - 58 - 80;
		layer.level = -3;
		layer.speed = 0.6;
		layer.image = Engine.loadImageResource("enviorment/mid_hills_small.png");
		map.layers[] = layer;

		layer = new MapLayer();
		layer.screenX = 0;
		layer.screenY = Engine.screenHeight() - 58;
		layer.level = -1;
		layer.speed = 1.0;
		layer.image = Engine.loadImageResource("enviorment/ground_bottom_small.png");
		map.layers[] = layer;


		layer = new MapLayer();
		layer.screenX = 0;
		layer.screenX = 0;
		layer.level = 1;
		layer.speed = 1.0;
		layer.image = Engine.loadImageResource("enviorment/clouds_top_small.png");
		map.layers[] = layer;
		
		/*layer = new MapLayer();
		layer.screenX = 0;
		layer.screenX = 0;
		layer.level = 1;
		layer.speed = 1.0;
		layer.image = Engine.loadImageResource("enviorment/sky_test2.bmp");
		map.layers[] = layer;*/
		
		
		map.width = 4050;
		map.height = 720;
		
		return map;
	}
	function unload() {
		.layers.each() using ( layer ) {
			layer.unload();
		};
	}
	function getWidth() {
		return .width;
	}
	function getHeight() {
		return .height;
	}
	function update( object playerCamera ) {
		.changeX = playerCamera.left - .lastCameraLeft;
		.changeY = playerCamera.top - .lastCameraTop;
		.lastCameraLeft = playerCamera.left;
		.lastCameraTop = playerCamera.top;
	}
	function drawBackground() {
		.layers.each() using ( layer ) {
			if( layer.level <= 0 ) {
				layer.draw(.changeX, .changeY);
			}
		};
	}
	function drawForeground() {
		.layers.each() using ( layer ) {
			if( layer.level > 0 ) {
				layer.draw(.changeX, .changeY);
			}
		};
	}
}

