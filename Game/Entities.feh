class Player {
	number id;
	boolean me;
	string name;
	number x;
	number y;
	number speed;
	number turningSpeed;
	number angle;
	number spriteAngle;
	object image;
	object controller;
	number health;
	boolean stalling;
	array smokePuffs;
	number nextSmokePuff;
	
	constructor {
		.image = Engine.loadImageResource('ssh-askpass-gnome.png');
		.health = 100.0;
		.stalling = false;
		for( number i = 0; i < 20; i++ )
			.smokePuffs[] = new SmokePuff();
	}
	destructor {
		Engine.unloadImageResource(.image);
	}
	
	function update() {
		if( .health > 0.0 ) {
			number halfWidth = .image.width() / 2;
			number halfHeight = .image.height() / 2;
			number radianAngle;
			number gravityPercentage = 0.0;
			number deltaSpeed;
			number left;
			number right;
			number top;
			number bottom;
			
			if( Time.current >= .nextSmokePuff ) {
				for( number i = 0; i < .smokePuffs.size(); i++ ) {
					if( .smokePuffs[i].currentLifeTime <= 0 ) {
						.smokePuffs[i].init(.x, .y);
						break;
					}
				}
				.nextSmokePuff = Time.current + 100;
			}
			for( number i = 0; i < .smokePuffs.size(); i++ ) {
				.smokePuffs[i].update();
			}
			
			if( .controller ) {
				.controller.update();
			}
			
			if( .stalling ) {
				.angle = 90.0;
				if( .spriteAngle >= 80.0 and .spriteAngle <= 100.0 ) {
					.angle = .spriteAngle;
					.stalling = false;
				}
			}

			radianAngle = .angle * (Engine.PI / 180);
			deltaSpeed = (.speed * Time.speedMultiplier);

			if( /* down */ .angle < 180.0 and .angle > 0 ) {
				number value = 90.0;
				if( .angle < 90.0 ) {
					value = .angle;
				} else if( .angle > 45.0 ) {
					value = 180.0 - .angle;
				}
				gravityPercentage = value / 90.0;
				deltaSpeed = deltaSpeed + ((Game.GRAVITY * gravityPercentage) * Time.speedMultiplier);
			} else if( /* up */ .angle > 180.0 and .angle < 360.0 ) {
				number value = 90.0;
				if( .angle < 270.0 ) {
					value = .angle - 180.0;
				} else if( .angle > 270.0 ) {
					value = 360.0 - .angle;
				}
				gravityPercentage = value / 90.0;
				deltaSpeed = deltaSpeed - ((Game.GRAVITY * gravityPercentage) * Time.speedMultiplier);
			}

			.x += (deltaSpeed * Engine.cos(radianAngle));
			.y += (deltaSpeed * Engine.sin(radianAngle));
			
			left = .x - halfWidth;
			right = .x + halfWidth;
			top = .y - halfHeight;
			bottom = .y + halfHeight;
			
			if( left <= 0 ) {
				.angle = 180 - .angle;
				.spriteAngle = .angle;
			} else if( right >= Engine.screenWidth() ) {
				.angle = 180 - .angle;
				.spriteAngle = .angle;
			} /*else if( top <= 0 ) {
				.angle = 360 - .angle;
			}*/
			
			if( .angle < 0.0 ) {
				.angle += 360.0;
			}
			
			if( .speed <= 0.0 ) {
				.stalling = true;
				.speed = 0.0;
			}
			
			if( bottom >= Engine.screenHeight() ) {
				.health = 0.0;
			}
			
			if( .me ) {
				Network.sendEntityUpdate(self);
			}
		}
	}
	
	function draw() {
		if( .health > 0.0 ) {
			object rotatedImage;
			.smokePuffs.each() using ( smokePuff ) {
				smokePuff.draw();
			};
			//Engine.drawImage(.image, .x - (.image.width() / 2), .y - (.image.height() / 2));
			rotatedImage = .image.rotate(-(.spriteAngle), 1.0, false);
			Engine.drawImage(rotatedImage, .x - (rotatedImage.width() / 2), .y - (rotatedImage.height() / 2));
			rotatedImage.unload();
		}
	}
}

class SmokePuff {
	object image;
	number x;
	number y;
	number zoom;
	number lifeTime;
	number currentLifeTime;
	constructor {
		.image = Engine.loadImageResource('smoke.png');
	}
	function init( number x, number y ) {
		.x = x;
		.y = y;
		.zoom = 1.0;
		.lifeTime = 2000;
		.currentLifeTime = .lifeTime;
	}
	function update() {
		if( .currentLifeTime > 0 ) {
			.zoom = (.currentLifeTime + 0.0) / (.lifeTime + 0.0);
			.currentLifeTime -= Time.delta;
		}
	}
	function draw() {
		if( .currentLifeTime > 0 ) {
			object zoomedImage = .image.rotate(0, .zoom, false);
			Engine.drawImage(zoomedImage, .x - (zoomedImage.width() / 2), .y - (zoomedImage.height() / 2));
			zoomedImage.unload();
		}
	}
}

